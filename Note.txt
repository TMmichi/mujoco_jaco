Note

    Problem specification:
        Keywords:
            1. Dexterous manipulation
            2. Strategic (time-dependent) manipulation
            3. Human data learning
            4. Multi-modal sensory data
            5. Safe to interact (torque control)
            6. Robot independent (worspace independent)
            7. Dual (multi) arm
            8. Reaching
            9. Grasping
            10. State representation
            11. Sim-to-Real
            12. Learning from Demonstration
            13. Reusable policies
            14. Explainable actions from policy
            15. Sample efficient learning


        Task specification:
            1. {
                Keywords: 
                Title: Screw-fixing
                Goal:
                Motivation:
            }
            2. {
                Keywords:
                Title: Plugging with sample-efficient policy by composing primitives
                Goal:
                Motivation:
            }
            3. {
                Keywords:
                Title: Guess What I'm doing: Dexterous manipulation via composing known primitives
                Goal: Make policies explainable while mimicking human-like behavior
                Motivation:
                    - Shall let the users what it's doing with human-interpretable information
                    - Behave in a way human brain does -> composing complicated behavior with basic structures of primitives
                    - MCPs uses primitives that are not identifiable
                    (WILL NOT USE: - most of the techniques uses joint angles -> restricted to the specific configuration of a robot)
                To do: 
                    - Train primitives that are identified for certain tasks
                    - Set task which requires multiple primitives
                        -> 
                    - State representation learning of required / orthogonal sensor data
                        -> check orthogonality of each sensors
                            - image, pressure, joint angles
                    - Provide auxilary networks when training in an End-to-End fashion / do a PCA analysis for actions under states to validate the need for an extra primitive.
                    - Identify unknown primitives with (forward propagation - collect state/action sets)
            }
            4. {
                Keywords: 
                Title: Who cares who I am: Policy transfer between robots without fine-tuning
                Goal: Make policies that can be transfered to different robot models without fine-tuning
                Motivation:
                    - most of the techniques uses joint angles -> restricted to the specific configuration of a robot
            }


    Research Details
        Making proper observations


                              
        Sub-primitives
            Questions:
                1. Why have sub-primitives?
                    - To construct primitives, observation spaces for each should be matched among all.
                        Reason: each primitives shall have an idea with the full knowledge of a current state
                        Question: Doesn't weight network determine how to composite primitives?
                        Defence: 
                    - But there is no need to train each primitives with full observation spaces
                    where they can acheive their goal with much simpler observations.
                    - pretrain sub-primitives with simple observation spaces, and modify them with 
                    full observation placeholders
                
                2. Did X.Peng pretrained their policies with full observation spaces?
                    - ?

            Actions:
                -> Need to select:
                    1. RL-trained sub-primitives and finetune them with full obs space
                    2. Not using sub-primitives and policy transfer with expert data directly with full obs space
            
            Consequences:
                1. if select sub-primitives:
                    Csq: Finetune twice for sub-primitives -> primitives and for primitives -> composite policy
                    Result: Complicated/Time consuming to pretrain and finetune twice
                2. 
            
            Defences for Consequences:
                Def for 1: To avoid complicated / time consumption problem
                    - May not have to finetune for primitives -> composite policies
                    Reason: 
                        1. ?
                            