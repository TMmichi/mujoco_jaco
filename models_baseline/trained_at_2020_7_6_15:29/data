{
    "learning_rate": {
        ":type:": "<class 'function'>",
        ":serialized:": "gASVYwIAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX2ZpbGxfZnVuY3Rpb26Uk5QoaACMD19tYWtlX3NrZWxfZnVuY5STlGgAjA1fYnVpbHRpbl90eXBllJOUjAhDb2RlVHlwZZSFlFKUKEsBSwBLAUsBSxNDBIgAUwCUToWUKYwBX5SFlIxTL2hvbWUvbGpoL1Byb2plY3QvbXVqb2NvX2phY28vc3RhYmxlX2Jhc2VsaW5lcy9zdGFibGVfYmFzZWxpbmVzL2NvbW1vbi9zY2hlZHVsZXMucHmUjARmdW5jlEuKQwIAAZSMA3ZhbJSFlCl0lFKUSwF9lCiMC19fcGFja2FnZV9flIwXc3RhYmxlX2Jhc2VsaW5lcy5jb21tb26UjAhfX25hbWVfX5SMIXN0YWJsZV9iYXNlbGluZXMuY29tbW9uLnNjaGVkdWxlc5SMCF9fZmlsZV9flIxTL2hvbWUvbGpoL1Byb2plY3QvbXVqb2NvX2phY28vc3RhYmxlX2Jhc2VsaW5lcy9zdGFibGVfYmFzZWxpbmVzL2NvbW1vbi9zY2hlZHVsZXMucHmUdYeUUpR9lCiMB2dsb2JhbHOUfZSMCGRlZmF1bHRzlE6MBGRpY3SUfZSMDmNsb3N1cmVfdmFsdWVzlF2URz8zqSowVTJhYYwGbW9kdWxllGgZjARuYW1llGgPjANkb2OUTowXX2Nsb3VkcGlja2xlX3N1Ym1vZHVsZXOUXZSMCHF1YWxuYW1llIwVY29uc3Rmbi48bG9jYWxzPi5mdW5jlIwKa3dkZWZhdWx0c5ROdXRSLg=="
    },
    "buffer_size": 50000,
    "learning_starts": 100,
    "train_freq": 1,
    "batch_size": 64,
    "tau": 0.005,
    "ent_coef": "auto",
    "target_entropy": {
        ":type:": "<class 'numpy.float32'>",
        ":serialized:": "gASVZwAAAAAAAACMFW51bXB5LmNvcmUubXVsdGlhcnJheZSMBnNjYWxhcpSTlIwFbnVtcHmUjAVkdHlwZZSTlIwCZjSUSwBLAYeUUpQoSwOMATyUTk5OSv////9K/////0sAdJRiQwQAAMDAlIaUUpQu"
    },
    "gamma": 0.99,
    "verbose": 0,
    "observation_space": {
        ":type:": "<class 'gym.spaces.box.Box'>",
        ":serialized:": "gASVSQwAAAAAAACMDmd5bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lEsASwGHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYowFc2hhcGWUSwaFlIwDbG93lIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUaAaMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLBoWUaAuJQxgAAADAAAAAwAAAAMAAAADAAAAAwAAAAMCUdJRijARoaWdolGgTaBVLAIWUaBeHlFKUKEsBSwaFlGgLiUMYAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAlHSUYowNYm91bmRlZF9iZWxvd5RoE2gVSwCFlGgXh5RSlChLAUsGhZRoCIwCYjGUSwBLAYeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiiUMGAQEBAQEBlHSUYowNYm91bmRlZF9hYm92ZZRoE2gVSwCFlGgXh5RSlChLAUsGhZRoK4lDBgEBAQEBAZR0lGKMCW5wX3JhbmRvbZSMFG51bXB5LnJhbmRvbS5fcGlja2xllIwSX19yYW5kb21zdGF0ZV9jdG9ylJOUjAdNVDE5OTM3lIWUUpR9lCiMDWJpdF9nZW5lcmF0b3KUaDuMBXN0YXRllH2UKIwDa2V5lGgTaBVLAIWUaBeHlFKUKEsBTXAChZRoCIwCdTSUSwBLAYeUUpQoSwNoDE5OTkr/////Sv////9LAHSUYolCwAkAAAAAAIDNHwA8l3Y9qczL+wjFgqjGwgDmKja3tlOQi2Cl/mt4ARZ/2L0YsggdS7TTZGcU6KFeGjv3LHKqRQ/NyeZ3n5KjbUFFJQAkxVxTVHLySdWR2JgFOtsiM/DkzzbupTolH7nl8UalU78F1RQRBHk4aTC2HoUq7yoe1jSGlmHPQvVfoViWdvDrcgFwbClI2CGdq/tz5zcTu2dVx0Wk/isD87kO9jZihwYAaaU7QNxbwLKGShDXxerlANq68nwpljUJreEJ/CiJ57aLkCo+0J+/hSeTxnof9p1+1sRdhEdw7vbCnqm/CnbU1tDQY2oJ/E1SC/LR4ybhvT1QrkGXGOzTtPALkE9vQwmhFY+NgnovQvvc5TI6WNdRGCETMhSo/nF8Mi9mSROLZcmQARVqWdzAp/ir8PIEJto5KM8L23JuFWQw3z3Is+r8kh4lV0YcrRSJKdIHzduRUiBIzQ1UHONQKv9Z5Ia4h5MBKKj2tIfSjv7Zvy1jmjc/ulsMPgAUKjLOnnKbz5w/fFlNKdso/wEHbg42hINzFTYfWz+TSZRswq9VUTSrXwE13oKrKx5qYJiedPz40edQfl6oEHA8zQ+7BI5M8ZHb6KJMf4qLATcaExGfxUQ45iR29zOCkokeo0l+SMea93hLp13vPMLft5jHP1Yp+CQ0aiFY64ieCZkr+BZyU7mgtz5q6kAJtQPU/CylNCLZ/Q8o1VRzc53r5F6lBBS21M96q6ORdf1fV4b1tnpPkj/A/hCWKJdq1EUfy4+oBCPKuNioPp6SP6wpY2hTHLDKBCRaDadXzIQrDLSXDLd8ArbKofYZD9vzJao956B8EDP9RkrIrQpDD0wcBIccVtVgeT9h2ICvA+phLPAfhW616DaV3DhXUidyU3A7YWPVd9xHwUwKBnyzrQFPaCF8aNY8M7p3GLMMvgMjNmGNbX/64L2a4ggXec+1HPZGDCJxMQmc60LMWZ85SxZz/tK1lLVWiLXgRckXrOCWPtUI0pRt3lGl0DME3/3pryIfWZfXHb1onfFxgBU9yInYjE+C2A1jBn4bdGiyhSgOBm3VCg6JwJHg4rJ8n2CgKNasEzHWAyE5izeyY9DzZx+WQAielDNZrk2Y1F/oPQ3czdIf3T+nQdMzoTR3yuICg70HMyARWQPrITBk3Z3F0K2+/m3hYHLx9j6ITnJi2+9IG20bJIdRZ5CHwL7YXdQ1YIa3Svs/hCJ/3sW0QjYBjqsF0amOc/T+37dKK9WCAtKPO84EScHLauSRCh8Ge5F0ZvcNkMtGYfCnbAJMsh9KBlwMhq6UQ3TS2IvSfYZWxfsdQlgK+7gfqoKA7FWu25yIZ4XDbfZSK5qRB7QmpWS79B4Ki3qvbxZ2tC+tSp/j81j6v61aSadI3eHIbDDsJ6igDmto1kKir1C7Ir1GpCYcFoeXrP8a5Gf5VnNjjwhELn3P5DLh+kiJ7yL8cVF7jDmNL3e7WIeJn7KNdEg5+rjUKlk/4LcOS3xtKzQJFrOs9NAKFLQ5/dFGXPgFFRiIbZFaNPfumVO2hFvtkzGjbe+Bf8iR1Ew5NHqJf/d9cA7rDZWvSnnbbKmRfbOn1yeZ4KVz0HCsjOtplTfUIaoVSyQ/4HT9559YoP15a4BwMx3l8h/e9RYg643Trda8cvDYX7ye0ZpvfNEJNwurQ9Wr034nQZHhJIZxob2M8QJLC1yuPhQ6EZJ1xitHMMC+JDsGnNW+iH4u2/qA9IdUhCJhVR20WSBpPPyVf3tpB/ZdH6dkNWHrFjbCDxc13KxHEl5jr0AvKkKc8l8B1XDEHctudboxt34jFn7BZT7U78F43QN5Z4a5J0WM8FnqLGT/odGhf0QZnY/33BETJpjtvHR+Grg5sXmMGNNc5L1P4IMG4Uf8o0G3koJbN5j/PNlBPUBuITa1gawXoYhvV6Ic/dusIkDUjD2gDyOyRi/XOyMWditStdHfLRPDfS4GbdEkOYqEkjO+TpirLeYLT+JSHzc6/B0/PQpVYcPot0oZ5GbNgnaiSO4Ozwx6HbsqUYiDDVp8mUG8NPwyK5QGZhtWF4PkiOHVzbdoFH5/q+8EVm2qmh1H1L3xPnm8wHBea6Aa0snxmml1/6AaWy64zJkqssRSg2BGLp096QnRhQlnEQdoTXSJf0yIfRwQ6ejY+RGHm+aDFTUwz4WFfF9fcbPIpxW1d5Jk3xYqWiyLt3ppEtO+a1Z7e7MIoptzIy2IrTH6jwGBRCsV8E+VPMQtKn8POjSWv+Az3i5UiauTnKuZXIARaWi2e9sD8TXzvzC0nhxMifTwQkqM2+4skrj5mLQpn/4AImx+UrDJI7NbZopUk61gRrTlWROw5fsAQwMnvioRIaTis9tNJF6PVN25lb0vlsywaDNlrNGumhG0vxuq604fVPWs57xyYaObk2O/UP8QDpAMbcIPUUe6eZ98aZuG5mHooXEVvW4eozoI+FW31AW9dq7e3c5vOYDQbA4NoAJFUqbj+sFJBfuGZjIc88OG8o49R4omul3pW8sdIUrK16v0jaGwVEMuBtweEjsbFXal03ocOip7MTdzljcSf9g12dpVM2JJQRTbOZaG7w5Pvnj5GeGsvdy+2en8gzfisRhPEUNOFGGxHBdFkW6Bpl0c+csTteg5XIAlf4Gi845+fQsdENIftai6PUAVLfuwIJX8S+AX10OYc2atpzngGtBZBOcbxW85S+YqjlW9tyMqyrYic8sZxVjpiwaFzsGDYTkUpkOA70+fX7RgSG+7f7aJH+ZLc/8g6u4UX9mvDSSuzJa3vDebQwpjCYsOMvPIcf6F7AeQC/3wPBM5avftfu8/67jNCuUTDlifJaY7jkqNEYOdirvvMy168vMRA0I1TXe4I5zFZHV2x/6avOf93K2O7HUCiyaFHvi+/BiNuZiWuBGFzyD7PNPdGfSRl01Y5p0D3WJWTtwZ2Tvtl7MA6svMiSswd5t2ep6kAiEyqyXFIt3Xqtv5nD/oz7SE2s0tTrLyBTJh/UQebmLoF3S9PYSrGQf3A/BvoC/EibG11MTnGCmmuWd1w4SmrFaI1vzn82Md+WFO6Hvcp23rG5v+1ZsgZ3CV0NQdIDFPXHfwyovn5Jryvk7CEj+OWmfx8qOmO+TEc98B0ln4N9osH9teP4WfapN2SIOshoE+jvzLpLexWdB5Fd+/1H8hIEYKZeVWAKurIP+3TcWbXnJHSgGnon4Sso9K9HVdC43N4glTK6B5VhDUOH61nKousqf30ezTOB61nvWDKZZdPhIzLvg9BAJFmmdgZOvdjN4VWco9cNOhn7IUxb328v6Og+32g8d2XGk9CWs2DKPGH1RYopR0lGKMA3Bvc5RNcAJ1jAloYXNfZ2F1c3OUSwCMBWdhdXNzlEcAAAAAAAAAAHVidWIu",
        "dtype": "float32",
        "shape": [
            6
        ],
        "low": "[-2. -2. -2. -2. -2. -2.]",
        "high": "[2. 2. 2. 2. 2. 2.]",
        "bounded_below": "[ True  True  True  True  True  True]",
        "bounded_above": "[ True  True  True  True  True  True]",
        "np_random": "RandomState(MT19937)"
    },
    "action_space": {
        ":type:": "<class 'gym.spaces.box.Box'>",
        ":serialized:": "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",
        "dtype": "float32",
        "shape": [
            6
        ],
        "low": "[-1.4 -1.4 -1.4 -1.4 -1.4 -1.4]",
        "high": "[1.4 1.4 1.4 1.4 1.4 1.4]",
        "bounded_below": "[ True  True  True  True  True  True]",
        "bounded_above": "[ True  True  True  True  True  True]",
        "np_random": "RandomState(MT19937)"
    },
    "policy": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gASVMQAAAAAAAACMHXN0YWJsZV9iYXNlbGluZXMuc2FjLnBvbGljaWVzlIwLTG5NbHBQb2xpY3mUk5Qu",
        "__module__": "stable_baselines.sac.policies",
        "__doc__": "\n    Policy object that implements actor critic, using a MLP (2 layers of 64), with layer normalisation\n\n    :param sess: (TensorFlow session) The current TensorFlow session\n    :param ob_space: (Gym Space) The observation space of the environment\n    :param ac_space: (Gym Space) The action space of the environment\n    :param n_env: (int) The number of environments to run\n    :param n_steps: (int) The number of steps to run for each environment\n    :param n_batch: (int) The number of batch to run (n_envs * n_steps)\n    :param reuse: (bool) If the policy is reusable or not\n    :param _kwargs: (dict) Extra keyword arguments for the nature CNN feature extraction\n    ",
        "__init__": "<function LnMlpPolicy.__init__ at 0x7fc91e6f57b8>",
        "__abstractmethods__": "frozenset()",
        "_abc_registry": "<_weakrefset.WeakSet object at 0x7fc91e6f66a0>",
        "_abc_cache": "<_weakrefset.WeakSet object at 0x7fc91e6f66d8>",
        "_abc_negative_cache": "<_weakrefset.WeakSet object at 0x7fc91e6f6748>",
        "_abc_negative_cache_version": 51
    },
    "n_envs": 1,
    "n_cpu_tf_sess": null,
    "seed": null,
    "action_noise": null,
    "random_exploration": 0.0,
    "_vectorize_action": false,
    "policy_kwargs": {}
}