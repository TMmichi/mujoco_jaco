{
    "learning_rate": {
        ":type:": "<class 'function'>",
        ":serialized:": "gASVFwIAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX2ZpbGxfZnVuY3Rpb26Uk5QoaACMD19tYWtlX3NrZWxfZnVuY5STlGgAjA1fYnVpbHRpbl90eXBllJOUjAhDb2RlVHlwZZSFlFKUKEsBSwBLAUsBSxNDBIgAUwCUToWUKYwBX5SFlIxbL2hvbWUvbGpoL1Byb2plY3QvbXVqb2NvX2phY28vc3JjL3N0YWJsZV9iYXNlbGluZXMvc3JjL3N0YWJsZV9iYXNlbGluZXMvY29tbW9uL3NjaGVkdWxlcy5weZSMBGZ1bmOUS4pDAgABlIwDdmFslIWUKXSUUpRLAX2UKIwLX19wYWNrYWdlX1+UjBdzdGFibGVfYmFzZWxpbmVzLmNvbW1vbpSMCF9fbmFtZV9flIwhc3RhYmxlX2Jhc2VsaW5lcy5jb21tb24uc2NoZWR1bGVzlIwIX19maWxlX1+UaA51h5RSlH2UKIwHZ2xvYmFsc5R9lIwIZGVmYXVsdHOUTowEZGljdJR9lIwOY2xvc3VyZV92YWx1ZXOUXZRHPzOpKjBVMmFhjAZtb2R1bGWUaBmMBG5hbWWUaA+MA2RvY5ROjBdfY2xvdWRwaWNrbGVfc3VibW9kdWxlc5RdlIwIcXVhbG5hbWWUjBVjb25zdGZuLjxsb2NhbHM+LmZ1bmOUjAprd2RlZmF1bHRzlE51dFIu"
    },
    "buffer_size": 50000,
    "learning_starts": 100,
    "train_freq": 1,
    "batch_size": 64,
    "tau": 0.005,
    "ent_coef": "auto",
    "target_entropy": {
        ":type:": "<class 'numpy.float32'>",
        ":serialized:": "gASVZwAAAAAAAACMFW51bXB5LmNvcmUubXVsdGlhcnJheZSMBnNjYWxhcpSTlIwFbnVtcHmUjAVkdHlwZZSTlIwCZjSUSwBLAYeUUpQoSwOMATyUTk5OSv////9K/////0sAdJRiQwQAAMDAlIaUUpQu"
    },
    "gamma": 0.99,
    "verbose": 0,
    "observation_space": {
        ":type:": "<class 'gym.spaces.box.Box'>",
        ":serialized:": "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",
        "dtype": "float32",
        "shape": [
            6
        ],
        "low": "[-2. -2. -2. -2. -2. -2.]",
        "high": "[2. 2. 2. 2. 2. 2.]",
        "bounded_below": "[ True  True  True  True  True  True]",
        "bounded_above": "[ True  True  True  True  True  True]",
        "np_random": "RandomState(MT19937)"
    },
    "action_space": {
        ":type:": "<class 'gym.spaces.box.Box'>",
        ":serialized:": "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",
        "dtype": "float32",
        "shape": [
            6
        ],
        "low": "[-1.4 -1.4 -1.4 -1.4 -1.4 -1.4]",
        "high": "[1.4 1.4 1.4 1.4 1.4 1.4]",
        "bounded_below": "[ True  True  True  True  True  True]",
        "bounded_above": "[ True  True  True  True  True  True]",
        "np_random": "RandomState(MT19937)"
    },
    "policy": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gASVMQAAAAAAAACMHXN0YWJsZV9iYXNlbGluZXMuc2FjLnBvbGljaWVzlIwLTG5NbHBQb2xpY3mUk5Qu",
        "__module__": "stable_baselines.sac.policies",
        "__doc__": "\n    Policy object that implements actor critic, using a MLP (2 layers of 64), with layer normalisation\n\n    :param sess: (TensorFlow session) The current TensorFlow session\n    :param ob_space: (Gym Space) The observation space of the environment\n    :param ac_space: (Gym Space) The action space of the environment\n    :param n_env: (int) The number of environments to run\n    :param n_steps: (int) The number of steps to run for each environment\n    :param n_batch: (int) The number of batch to run (n_envs * n_steps)\n    :param reuse: (bool) If the policy is reusable or not\n    :param _kwargs: (dict) Extra keyword arguments for the nature CNN feature extraction\n    ",
        "__init__": "<function LnMlpPolicy.__init__ at 0x7f3d0a69f400>",
        "__abstractmethods__": "frozenset()",
        "_abc_registry": "<_weakrefset.WeakSet object at 0x7f3d0a6a0ba8>",
        "_abc_cache": "<_weakrefset.WeakSet object at 0x7f3d0a6a0be0>",
        "_abc_negative_cache": "<_weakrefset.WeakSet object at 0x7f3d0a6a0c50>",
        "_abc_negative_cache_version": 51
    },
    "n_envs": 1,
    "n_cpu_tf_sess": null,
    "seed": null,
    "action_noise": null,
    "random_exploration": 0.0,
    "_vectorize_action": false,
    "policy_kwargs": {}
}