{
    "learning_rate": {
        ":type:": "<class 'function'>",
        ":serialized:": "gASVcwIAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX2ZpbGxfZnVuY3Rpb26Uk5QoaACMD19tYWtlX3NrZWxfZnVuY5STlGgAjA1fYnVpbHRpbl90eXBllJOUjAhDb2RlVHlwZZSFlFKUKEsBSwBLAUsBSxNDBIgAUwCUToWUKYwBX5SFlIxbL2hvbWUvbGpoL1Byb2plY3QvbXVqb2NvX2phY28vc3JjL3N0YWJsZV9iYXNlbGluZXMvc3JjL3N0YWJsZV9iYXNlbGluZXMvY29tbW9uL3NjaGVkdWxlcy5weZSMBGZ1bmOUS4pDAgABlIwDdmFslIWUKXSUUpRLAX2UKIwLX19wYWNrYWdlX1+UjBdzdGFibGVfYmFzZWxpbmVzLmNvbW1vbpSMCF9fbmFtZV9flIwhc3RhYmxlX2Jhc2VsaW5lcy5jb21tb24uc2NoZWR1bGVzlIwIX19maWxlX1+UjFsvaG9tZS9samgvUHJvamVjdC9tdWpvY29famFjby9zcmMvc3RhYmxlX2Jhc2VsaW5lcy9zcmMvc3RhYmxlX2Jhc2VsaW5lcy9jb21tb24vc2NoZWR1bGVzLnB5lHWHlFKUfZQojAdnbG9iYWxzlH2UjAhkZWZhdWx0c5ROjARkaWN0lH2UjA5jbG9zdXJlX3ZhbHVlc5RdlEc/M6kqMFUyYWGMBm1vZHVsZZRoGYwEbmFtZZRoD4wDZG9jlE6MF19jbG91ZHBpY2tsZV9zdWJtb2R1bGVzlF2UjAhxdWFsbmFtZZSMFWNvbnN0Zm4uPGxvY2Fscz4uZnVuY5SMCmt3ZGVmYXVsdHOUTnV0Ui4="
    },
    "buffer_size": 50000,
    "learning_starts": 100,
    "train_freq": 1,
    "batch_size": 64,
    "tau": 0.005,
    "ent_coef": "auto",
    "target_entropy": {
        ":type:": "<class 'numpy.float32'>",
        ":serialized:": "gASVZwAAAAAAAACMFW51bXB5LmNvcmUubXVsdGlhcnJheZSMBnNjYWxhcpSTlIwFbnVtcHmUjAVkdHlwZZSTlIwCZjSUSwBLAYeUUpQoSwOMATyUTk5OSv////9K/////0sAdJRiQwQAAMDAlIaUUpQu"
    },
    "gamma": 0.99,
    "verbose": 0,
    "observation_space": {
        ":type:": "<class 'gym.spaces.box.Box'>",
        ":serialized:": "gASVSQwAAAAAAACMDmd5bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lEsASwGHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYowFc2hhcGWUSwaFlIwDbG93lIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUaAaMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLBoWUaAuJQxgAAADAAAAAwAAAAMAAAADAAAAAwAAAAMCUdJRijARoaWdolGgTaBVLAIWUaBeHlFKUKEsBSwaFlGgLiUMYAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAlHSUYowNYm91bmRlZF9iZWxvd5RoE2gVSwCFlGgXh5RSlChLAUsGhZRoCIwCYjGUSwBLAYeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiiUMGAQEBAQEBlHSUYowNYm91bmRlZF9hYm92ZZRoE2gVSwCFlGgXh5RSlChLAUsGhZRoK4lDBgEBAQEBAZR0lGKMCW5wX3JhbmRvbZSMFG51bXB5LnJhbmRvbS5fcGlja2xllIwSX19yYW5kb21zdGF0ZV9jdG9ylJOUjAdNVDE5OTM3lIWUUpR9lCiMDWJpdF9nZW5lcmF0b3KUaDuMBXN0YXRllH2UKIwDa2V5lGgTaBVLAIWUaBeHlFKUKEsBTXAChZRoCIwCdTSUSwBLAYeUUpQoSwNoDE5OTkr/////Sv////9LAHSUYolCwAkAAAAAAIDZiSRM8+vROj5PxGaIqBkneeoqySj/6Qda+X9UOylQ0QMsB+E4r5BJcypNyil1znz1PTlq1h9HqWCKcQlUuf5ozVOlJ286SvZYfod7Vyo9xCBfDb7Gj829rZEh+zcVBWcoT9eGF21UUTbgA7+dzG0+e0uMP3NGVtVxEoxUtFJkpkPrFHEl7+ZJHALzj7Zqq4KtQ0kTH1kI3piy7WBbd9aoa4FJWwdcsatpgtVku0OwBUKlqyNMIibF6pZnXqqTl+aNeAkCAYd1j4SbHJamkP0xH343dP6a2w9LPQVDe6baiCH3QGQH02CrZZuy9/DLpRjA8Denaf/BIgfHohlQmRqCCSJulAZTa3tV1X7G8ZuE0TOoGBtl4SvWL4tm1qPZi4+QIPKmrrIht9KgxS87E7EVJRBGzXTyXyyPAQeXUJGRFcvYN1vX/q4jGyOanBghLD8h9hLnXh09lI0qW1qk4P7Gh+gxxpWaiNyUnkIwvHkcyypSodafh5ulO5gy3qpmDrFyt5TRvFvNrlRCVXjmcOg3jlTa9Bpl/iRiaUnTIxtZOg/pXff2QNV11VMsyKbuf8z7w6WrSLWoVrf0KVqVU1KY8657e9VcSA8omwQCz9x4a+sSEK5AKor0e42JCPFRgkbkyucQlH9UhMQiwcRzzgIJLFB0NTCxt+DljXVHp0NeeoLD1xmoMhnABu7EPA3b9o1dxq+MfUtlKUGRkoQ+61zTmNecmgYpoYF/i4hrP4ktGp/czI9THcNQ5PdQesIOvR5IpTUB+4E4nJdIQ1+OtaWbXQxEzIMg4elyvhuP2zA0xddbHBI8nbDly4bw3TQ3mokFZLgapAEOxZLy1O/6gkgIIycYPe2AkOjwUeWu2t7wx7XUWbVMadnjSyA5jAn6XydFfRpmWvqydbR+FDaUnxQQYuGGAPlEcoPwYhZN02KLAjuoLVCe0t3jm5thdUoBPN3ODpxdvjE9rqc3g3R5qWwexx13w3Alx+ciQKs+uqe4BxQMJfGhcz51C986E7C5pBt1OBKCvuzO5P8MTh8BBZSY9pRSQB4tDW06Wvi2Lazr/StQlHk7ZsQHGS8VscWOw+KsKOJSFX/tA9XCwplXKxwnt4SeRzZiJ3ezacHf4C4ZcWEXrbfLRWDsg7x2NcoJ8I+4a5yZSHCc9WggA6YX2jlsrVWii1Zoft0CoryCPuBRp9puwCLY6RggkghNmFdyBomknJEUN7RqpL51RPVG9GjRUEVeiKnIFDu9oIJCCy2/4fKj522R86hdYVkQSth5gfZ6Ya5H/AnsDbCto1WohNl8qfHHCDJ+9XwNdoq3sC6ceE8+QZwqLRbi5DiCfwLE5Qjswjxywf+LbnvjgQHhPfncvLW4QuCrB4Fk8mwhiUTTcjxcBa/w+nrk1NmrP16BkCxoeZ2HVQm/TvZEu+HwotfrvnO+i9Mx+Vx99AGwD67NzCP2zizn2IfyAa7drKiewFCkUUN0zpSwyhxt5zTqZ5fQZNDwxB6J6sEeL71wk3y5zeNfUCPbIB4nblO4xKp5hr83VzkfB3nt5GD4B04UaZ1AWp5icp4Vtdk4psVlJoKkWNPVWqbhoLQsTGMwh6Zwj0tO6dpVx7n0+q/wrZoHAm+1vIeXKug+HOs2cgCeN4o/z0u772a/69KDWd9wUCvGRwNz8t8INmAwOuWTRRdBwOTEFcMOp3jvCLSbPcpCFlnkh+pwCaE4XMngScla57NDeBXVOEglqlvO6Gg1iOW72jyBp3wqnhn53mMagSEV2RCPkl9YD2pnjVHwVfu5v6W/8ep+0wzrTVZsGiSiTe01mRzvex5GiVLNqn1ZFPmFRd2MDtEoVkCckdxGIvOBamVcUwGahkN3AW1cw/RtE4e9unvL7hAPmPJSrTeKA7z8XqiqHzH38kr0EV+qXPXHLQC1kIKTwVSqDtMfzRdtgAPK/BzokKtmFm6QJBm715gkHDdVU1CGRWC3fT7j0Dc4Lm2ZBJ4dLRQcEWuL29KporbGFyrYLQmJvwmFMzQrhaXxA2BSX+OhfGy3kY0BUg5keE+fOR6b7PeV1t9FBh8DG3UoY0uWjBxrabXG6grT0qSm2aA0iEJaYwry7lZJdonEGPbqEtSWT+ojecPzq+9TdZXEm4Ig2AzRRn2PqS7QIas3ngVqA4Ri6L1xITz6dABZN78YFLaYFv5Ner1E2lIFqIgJ9sAHFyNagLdfbtVhMcwJggo6oNKjMq+LqER3jG+FNVRPKqEivxv4emv1sY0/IOcd6rFIBFfcnPTPUCOvImL2dyzfInsONCZdztOfl/qegiDiORr7Opg5KWxDZw2wFJkpB3s+RKGsDLyPsN64WpaRPpiv1FcmhAXE3bnMuanOdO+GAdidN9RkfZqB3GAebWMl1LR6tBMqGpSkPAjK+N+aTZFrhhuOyPruHY03P+2FAiUIZxd759EcrgoPJVdr86tau0cfxsFDUTNz/MtD6KidpVEWJqV+6ZTVM/XyJLquwjD+DFdHBXiZR+R0skn/IhSaqvj1YpzPuIXjX/EDEg6XZj/8VSeSw1gtG2c+vAm8gkHF1wovv8e3kkcpn86+2Em9JPZleHYhTHYDxybgR4qPEde3nLrusalbDurDasC1voMS7yvnNWSKXvBY0/QuPFQ+gbeTUmFBlr7JjsV/tO0ZbUQvk+e3E4nY5lZTbJYQOWA+brIReDpIkHrizwdCCsC8iTlteITNBoo5fQLIoeIY51A59gDdRAze3IoSGblBghwGXUZiqwIM9IIdxiRfg8JnfuFNn4EUI9Ktihf8U8JxtuqUQ42qT8xhLk9bD6Ha2ydEeKRoTeTnpWW1UWpTbFMeIHrGJONx3MXhoRZAK9sKMV2vFMhs8SlIeu134fGVpStTITev7Ug2JtCCQRex6PeCoJbgiDyQvBDuP3ViLzHB0CebCTIV1ZWhQ6nsFOjSkBRc6mr3UqQ1w1jkwWMURXzBQ5AUC3xaqjwJ3qSpzXjHhFC9S+JpGD3+uA/QxbuO14VMMSS+V6nVfaEyY9r/YcvQRCq6WO1tAQ0A8FYvj35EnTLcc6Cnmlkwqn+d+ROZMjskpqknNLERh9ZtO1qY0mSLpEdWhO8agXFYK/tTBWEjDOPdwWTmuTTRE0QwmXdELd8PFbCD30C46o2jKrExec7ity6PnTfY2ktfHW+f/RyNDa6E6T/Gjsegiy0ro8TBwR7T19nH0XCrUH7Tz7keg8gZ3WOoz7zTnj1sQiXW7/yihCPA78zGeW+BrWglAHJkyftEIbyeZEHb9lzKAZ38n1nVbL0z9FXN+QTYVYfeKUMJTNjy6stT6aXZu+TnY3xpqpR0lGKMA3Bvc5RNcAJ1jAloYXNfZ2F1c3OUSwCMBWdhdXNzlEcAAAAAAAAAAHVidWIu",
        "dtype": "float32",
        "shape": [
            6
        ],
        "low": "[-2. -2. -2. -2. -2. -2.]",
        "high": "[2. 2. 2. 2. 2. 2.]",
        "bounded_below": "[ True  True  True  True  True  True]",
        "bounded_above": "[ True  True  True  True  True  True]",
        "np_random": "RandomState(MT19937)"
    },
    "action_space": {
        ":type:": "<class 'gym.spaces.box.Box'>",
        ":serialized:": "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",
        "dtype": "float32",
        "shape": [
            6
        ],
        "low": "[-1.4 -1.4 -1.4 -1.4 -1.4 -1.4]",
        "high": "[1.4 1.4 1.4 1.4 1.4 1.4]",
        "bounded_below": "[ True  True  True  True  True  True]",
        "bounded_above": "[ True  True  True  True  True  True]",
        "np_random": "RandomState(MT19937)"
    },
    "policy": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gASVMQAAAAAAAACMHXN0YWJsZV9iYXNlbGluZXMuc2FjLnBvbGljaWVzlIwLTG5NbHBQb2xpY3mUk5Qu",
        "__module__": "stable_baselines.sac.policies",
        "__doc__": "\n    Policy object that implements actor critic, using a MLP (2 layers of 64), with layer normalisation\n\n    :param sess: (TensorFlow session) The current TensorFlow session\n    :param ob_space: (Gym Space) The observation space of the environment\n    :param ac_space: (Gym Space) The action space of the environment\n    :param n_env: (int) The number of environments to run\n    :param n_steps: (int) The number of steps to run for each environment\n    :param n_batch: (int) The number of batch to run (n_envs * n_steps)\n    :param reuse: (bool) If the policy is reusable or not\n    :param _kwargs: (dict) Extra keyword arguments for the nature CNN feature extraction\n    ",
        "__init__": "<function LnMlpPolicy.__init__ at 0x7f035be05d08>",
        "__abstractmethods__": "frozenset()",
        "_abc_registry": "<_weakrefset.WeakSet object at 0x7f035be0a438>",
        "_abc_cache": "<_weakrefset.WeakSet object at 0x7f035be0a470>",
        "_abc_negative_cache": "<_weakrefset.WeakSet object at 0x7f035be0a4e0>",
        "_abc_negative_cache_version": 51
    },
    "n_envs": 1,
    "n_cpu_tf_sess": null,
    "seed": null,
    "action_noise": null,
    "random_exploration": 0.0,
    "_vectorize_action": false,
    "policy_kwargs": {}
}