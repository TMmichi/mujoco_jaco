{
    "learning_rate": {
        ":type:": "<class 'function'>",
        ":serialized:": "gASVfQIAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX2ZpbGxfZnVuY3Rpb26Uk5QoaACMD19tYWtlX3NrZWxfZnVuY5STlGgAjA1fYnVpbHRpbl90eXBllJOUjAhDb2RlVHlwZZSFlFKUKEsBSwBLAUsBSxNDBIgAUwCUToWUKYwBX5SFlIxYL2hvbWUvbGpoL1Byb2plY3QvbWxjcy9tdWpvY29famFjby9zdGFibGVfYmFzZWxpbmVzL3N0YWJsZV9iYXNlbGluZXMvY29tbW9uL3NjaGVkdWxlcy5weZSMBGZ1bmOUS4pDAgABlIwDdmFslIWUKXSUUpRLAX2UKIwLX19wYWNrYWdlX1+UjBdzdGFibGVfYmFzZWxpbmVzLmNvbW1vbpSMCF9fbmFtZV9flIwhc3RhYmxlX2Jhc2VsaW5lcy5jb21tb24uc2NoZWR1bGVzlIwIX19maWxlX1+UjFgvaG9tZS9samgvUHJvamVjdC9tbGNzL211am9jb19qYWNvL3N0YWJsZV9iYXNlbGluZXMvc3RhYmxlX2Jhc2VsaW5lcy9jb21tb24vc2NoZWR1bGVzLnB5lHWHlFKUfZQojAdnbG9iYWxzlH2UjAhkZWZhdWx0c5ROjARkaWN0lH2UjA5jbG9zdXJlX3ZhbHVlc5RdlEc/M6kqMFUyYWGMBm1vZHVsZZRoGYwEbmFtZZRoD4wDZG9jlE6MF19jbG91ZHBpY2tsZV9zdWJtb2R1bGVzlF2UjAthbm5vdGF0aW9uc5R9lIwIcXVhbG5hbWWUjBVjb25zdGZuLjxsb2NhbHM+LmZ1bmOUjAprd2RlZmF1bHRzlE51dFIu"
    },
    "buffer_size": 50000,
    "learning_starts": 100,
    "train_freq": 1,
    "batch_size": 64,
    "tau": 0.005,
    "ent_coef": "auto",
    "target_entropy": {
        ":type:": "<class 'numpy.float32'>",
        ":serialized:": "gASVZwAAAAAAAACMFW51bXB5LmNvcmUubXVsdGlhcnJheZSMBnNjYWxhcpSTlIwFbnVtcHmUjAVkdHlwZZSTlIwCZjSUSwBLAYeUUpQoSwOMATyUTk5OSv////9K/////0sAdJRiQwQAAADAlIaUUpQu"
    },
    "gamma": 0.99,
    "verbose": 0,
    "observation_space": {
        ":type:": "<class 'gym.spaces.box.Box'>",
        ":serialized:": "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",
        "dtype": "float32",
        "shape": [
            2
        ],
        "low": "[-inf -inf]",
        "high": "[inf inf]",
        "bounded_below": "[False False]",
        "bounded_above": "[False False]",
        "np_random": "RandomState(MT19937)"
    },
    "action_space": {
        ":type:": "<class 'gym.spaces.box.Box'>",
        ":serialized:": "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",
        "dtype": "float32",
        "shape": [
            2
        ],
        "low": "[-3.1415927 -3.1415927]",
        "high": "[3.1415927 3.1415927]",
        "bounded_below": "[ True  True]",
        "bounded_above": "[ True  True]",
        "np_random": "RandomState(MT19937)"
    },
    "policy": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gASVNQAAAAAAAACMI3N0YWJsZV9iYXNlbGluZXMuc2FjX211bHRpLnBvbGljaWVzlIwJTWxwUG9saWN5lJOULg==",
        "__module__": "stable_baselines.sac_multi.policies",
        "__doc__": "\n    Policy object that implements actor critic, using a MLP (2 layers of 64)\n\n    :param sess: (TensorFlow session) The current TensorFlow session\n    :param ob_space: (Gym Space) The observation space of the environment\n    :param ac_space: (Gym Space) The action space of the environment\n    :param n_env: (int) The number of environments to run\n    :param n_steps: (int) The number of steps to run for each environment\n    :param n_batch: (int) The number of batch to run (n_envs * n_steps)\n    :param reuse: (bool) If the policy is reusable or not\n    :param _kwargs: (dict) Extra keyword arguments for the nature CNN feature extraction\n    ",
        "__init__": "<function MlpPolicy.__init__ at 0x7fa53ee78050>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc_data object at 0x7fa53ee60c30>"
    },
    "n_envs": 1,
    "n_cpu_tf_sess": null,
    "seed": null,
    "action_noise": null,
    "random_exploration": 0.0,
    "_vectorize_action": false,
    "policy_kwargs": {}
}